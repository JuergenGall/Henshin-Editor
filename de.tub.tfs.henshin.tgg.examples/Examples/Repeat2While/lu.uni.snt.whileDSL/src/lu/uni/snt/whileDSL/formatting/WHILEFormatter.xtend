/*
 * generated by Xtext
 */
package lu.uni.snt.whileDSL.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

import com.google.inject.Inject;
import lu.uni.snt.whileDSL.services.WHILEGrammarAccess
import org.eclipse.xtext.Keyword

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class WHILEFormatter extends AbstractDeclarativeFormatter {

//	@Inject extension WHILEGrammarAccess
	
WHILEGrammarAccess ga

override protected void configureFormatting(FormattingConfig c) {
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments
		ga= this.getGrammarAccess() as WHILEGrammarAccess;
		c.setLinewrap(0, 1, 2).before(ga.commentRule)
		c.setLinewrap(0, 1, 1).after(ga.commentRule)

		 for (Keyword kw : ga.findKeywords("(",")")){
		 c.setNoSpace().before(kw);
		 c.setNoSpace().after(kw);
		 }

		 for (Keyword kw : ga.findKeywords(";")){
		 c.setLinewrap(0, 1, 1).after(kw)
		 }


//		 for (Pair pair : ga.findKeywordPairs("(",")")		 	
//		 ) {
//		 c.setNoSpace().before(pair.getFirst());
//		 c.setNoSpace().after(pair.getSecond());
//		 }
		
	}
}
